{"tag": "function", "depth": 1, "time": 1603676837.9412463, "data": {"name": "record_ui", "call_args": {"driver": "<poco.drivers.android.uiautomation.AndroidUiautomationPoco object at 0x0000026BC448F358>", "action": "'click'", "ui": "UIObjectProxy of \"text=\u6bcf\u65e5\u63a8\u8350\"", "args": "[0.10555555555555556, 0.36709401709401707]"}, "start_time": 1603676837.9412463, "ret": "UIObjectProxy of \"text=\u6bcf\u65e5\u63a8\u8350\"", "end_time": 1603676837.9412463}}
{"tag": "function", "depth": 2, "time": 1603676839.9013402, "data": {"name": "try_log_screen", "call_args": {"screen": null, "quality": null, "max_size": null}, "start_time": 1603676838.7423706, "ret": {"screen": "1603676839857.jpg", "resolution": [1080, 2340]}, "end_time": 1603676839.9013402}}
{"tag": "function", "depth": 1, "time": 1603676841.0053174, "data": {"name": "touch", "call_args": {"v": [114.0, 858.9999999999999], "kwargs": {"duration": 0.01}, "times": 1}, "start_time": 1603676838.7423706, "ret": [114.0, 858.9999999999999], "end_time": 1603676841.0053174}}
{"tag": "function", "depth": 1, "time": 1603676842.9520445, "data": {"name": "assert_equal", "call_args": {"first": "26", "second": "26", "msg": "\u65f6\u95f4\u662f\u5426\u6b63\u786e"}, "start_time": 1603676842.9520445, "ret": null, "end_time": 1603676842.9520445}}
{"tag": "function", "depth": 1, "time": 1603676843.1066334, "data": {"name": "assert_equal", "call_args": {"first": true, "second": true, "msg": "\u64ad\u653e\u5168\u90e8\u6309\u94ae\u662f\u5426\u5b58\u5728"}, "start_time": 1603676843.1066334, "ret": null, "end_time": 1603676843.1066334}}
{"tag": "function", "depth": 1, "time": 1603676844.0533037, "data": {"name": "record_ui", "call_args": {"driver": "<poco.drivers.android.uiautomation.AndroidUiautomationPoco object at 0x0000026BC448F358>", "action": "'click'", "ui": "UIObjectProxy of \"text=\u674e\u514b\u52e4 - \u7ecf\u5178\u91d1\u66f2\"", "args": "[0.30185185185185187, 0.3482905982905983]"}, "start_time": 1603676844.0523043, "ret": "UIObjectProxy of \"text=\u674e\u514b\u52e4 - \u7ecf\u5178\u91d1\u66f2\"", "end_time": 1603676844.0533037}}
{"tag": "function", "depth": 2, "time": 1603676844.284322, "data": {"name": "try_log_screen", "call_args": {"screen": null, "quality": null, "max_size": null}, "start_time": 1603676844.0533037, "ret": {"screen": "1603676844252.jpg", "resolution": [1080, 2340]}, "end_time": 1603676844.284322}}
{"tag": "function", "depth": 1, "time": 1603676844.4688914, "data": {"name": "touch", "call_args": {"v": [326.0, 815.0], "kwargs": {"duration": 0.01}, "times": 1}, "start_time": 1603676844.0533037, "ret": [326.0, 815.0], "end_time": 1603676844.4688914}}
{"tag": "function", "depth": 3, "time": 1603676846.9881015, "data": {"name": "_cv_match", "call_args": {"self": {"filename": "D:\\Pycharm\\PythonProject\\app29\\entrance\\static\\TestData\\index\\tpl1603158907858.png", "_filepath": "D:\\Pycharm\\PythonProject\\app29\\entrance\\static\\TestData\\index\\tpl1603158907858.png", "threshold": 0.7, "target_pos": 5, "record_pos": [0.002, 0.95], "resolution": [1080, 2340], "rgb": false, "__class__": "Template"}, "screen": "array([[[13, 10, 26],\n        [13, 10, 26],\n        [13, 10, 26],\n        ...,\n        [18, 13, 34],\n        [18, 13, 34],\n        [18, 13, 34]],\n\n       [[13, 10, 26],\n        [13, 10, 26],\n        [13, 10, 26],\n        ...,\n        [18, 13, 34],\n        [18, 13, 34],\n        [18, 13, 34]],\n\n       [[13, 10, 26],\n        [13, 10, 26],\n        [13, 10, 26],\n        ...,\n        [18, 13, 34],\n        [18, 13, 34],\n        [18, 13, 34]],\n\n       ...,\n\n       [[ 8,  5, 14],\n        [ 8,  5, 14],\n        [ 8,  5, 14],\n        ...,\n        [11, 10, 19],\n        [11, 10, 19],\n        [11, 10, 19]],\n\n       [[ 8,  5, 14],\n        [ 8,  5, 14],\n        [ 8,  5, 14],\n        ...,\n        [11, 10, 19],\n        [11, 10, 19],\n        [11, 10, 19]],\n\n       [[ 8,  5, 14],\n        [ 8,  5, 14],\n        [ 8,  5, 14],\n        ...,\n        [11, 10, 19],\n        [11, 10, 19],\n        [11, 10, 19]]], dtype=uint8)"}, "start_time": 1603676846.1722338, "ret": {"result": [541, 2195], "rectangle": [[457, 2125], [457, 2265], [625, 2265], [625, 2125]], "confidence": 0.8880395889282227}, "end_time": 1603676846.9871044}}
{"tag": "function", "depth": 3, "time": 1603676847.0210133, "data": {"name": "try_log_screen", "call_args": {"screen": "array([[[13, 10, 26],\n        [13, 10, 26],\n        [13, 10, 26],\n        ...,\n        [18, 13, 34],\n        [18, 13, 34],\n        [18, 13, 34]],\n\n       [[13, 10, 26],\n        [13, 10, 26],\n        [13, 10, 26],\n        ...,\n        [18, 13, 34],\n        [18, 13, 34],\n        [18, 13, 34]],\n\n       [[13, 10, 26],\n        [13, 10, 26],\n        [13, 10, 26],\n        ...,\n        [18, 13, 34],\n        [18, 13, 34],\n        [18, 13, 34]],\n\n       ...,\n\n       [[ 8,  5, 14],\n        [ 8,  5, 14],\n        [ 8,  5, 14],\n        ...,\n        [11, 10, 19],\n        [11, 10, 19],\n        [11, 10, 19]],\n\n       [[ 8,  5, 14],\n        [ 8,  5, 14],\n        [ 8,  5, 14],\n        ...,\n        [11, 10, 19],\n        [11, 10, 19],\n        [11, 10, 19]],\n\n       [[ 8,  5, 14],\n        [ 8,  5, 14],\n        [ 8,  5, 14],\n        ...,\n        [11, 10, 19],\n        [11, 10, 19],\n        [11, 10, 19]]], dtype=uint8)", "quality": null, "max_size": null}, "start_time": 1603676846.9881015, "ret": {"screen": "1603676846988.jpg", "resolution": [1080, 2340]}, "end_time": 1603676847.0210133}}
{"tag": "function", "depth": 2, "time": 1603676847.0220108, "data": {"name": "loop_find", "call_args": {"query": {"filename": "D:\\Pycharm\\PythonProject\\app29\\entrance\\static\\TestData\\index\\tpl1603158907858.png", "_filepath": "D:\\Pycharm\\PythonProject\\app29\\entrance\\static\\TestData\\index\\tpl1603158907858.png", "threshold": 0.7, "target_pos": 5, "record_pos": [0.002, 0.95], "resolution": [1080, 2340], "rgb": false, "__class__": "Template"}, "timeout": 20, "threshold": 0.7, "interval": 0.5, "intervalfunc": null}, "start_time": 1603676846.0888815, "ret": [541, 2195], "end_time": 1603676847.0220108}}
{"tag": "function", "depth": 1, "time": 1603676847.0220108, "data": {"name": "assert_exists", "call_args": {"v": {"filename": "D:\\Pycharm\\PythonProject\\app29\\entrance\\static\\TestData\\index\\tpl1603158907858.png", "_filepath": "D:\\Pycharm\\PythonProject\\app29\\entrance\\static\\TestData\\index\\tpl1603158907858.png", "threshold": 0.7, "target_pos": 5, "record_pos": [0.002, 0.95], "resolution": [1080, 2340], "rgb": false, "__class__": "Template"}, "msg": "\u6210\u529f\u64ad\u653e"}, "start_time": 1603676846.0888815, "ret": [541, 2195], "end_time": 1603676847.0220108}}
{"tag": "function", "depth": 1, "time": 1603676847.1137662, "data": {"name": "assert_equal", "call_args": {"first": false, "second": true, "msg": "\u6b4c\u540d\u4e0e\u70b9\u51fb\u7684\u4e00\u81f4"}, "start_time": 1603676847.1127684, "traceback": "Traceback (most recent call last):\n  File \"D:\\Pycharm\\PythonProject\\venv\\woniu29\\lib\\site-packages\\airtest\\utils\\logwraper.py\", line 84, in wrapper\n    res = f(*args, **kwargs)\n  File \"D:\\Pycharm\\PythonProject\\venv\\woniu29\\lib\\site-packages\\airtest\\core\\api.py\", line 527, in assert_equal\n    raise AssertionError(\"%s and %s are not equal, message: %s\" % (first, second, msg))\nAssertionError: False and True are not equal, message: \u6b4c\u540d\u4e0e\u70b9\u51fb\u7684\u4e00\u81f4\n", "end_time": 1603676847.1137662}}
{"tag": "info", "depth": 0, "time": 1603676847.1137662, "data": {"name": "Error:\u62a5\u9519\u4fe1\u606f", "traceback": "Traceback (most recent call last):\n  File \"D:\\Pycharm\\PythonProject\\app29\\TestCase\\Index\\testindex.py\", line 86, in testbanner\n    assert_equal(self.poco(text=song_name).exists(), True, \"\u6b4c\u540d\u4e0e\u70b9\u51fb\u7684\u4e00\u81f4\")\n  File \"D:\\Pycharm\\PythonProject\\venv\\woniu29\\lib\\site-packages\\airtest\\utils\\logwraper.py\", line 84, in wrapper\n    res = f(*args, **kwargs)\n  File \"D:\\Pycharm\\PythonProject\\venv\\woniu29\\lib\\site-packages\\airtest\\core\\api.py\", line 527, in assert_equal\n    raise AssertionError(\"%s and %s are not equal, message: %s\" % (first, second, msg))\nAssertionError: False and True are not equal, message: \u6b4c\u540d\u4e0e\u70b9\u51fb\u7684\u4e00\u81f4\n"}}
